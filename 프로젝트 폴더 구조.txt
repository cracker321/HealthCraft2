지시어: 이 기술스택들을 하나도 빠짐없이 모두 다 모두 사용할거야. 이 프로젝트 폴더 구조에서 내가 이 기술스택들을 다 사용함에 있어서 빠뜨린 폴더나 파일들 있으면 싹 다 다 포함시키고, 그리고 훨씬 더 구체적이고 상세하게 폴더 및 파일들을 더 포함시켜서 말해줘.



/health-craft
│
├── /frontend                 // React.js 프론트엔드 애플리케이션
│   ├── /public               // 정적 파일 (이미지, 아이콘 등)
│   │   ├── index.html        // 메인 HTML 파일
│   │   ├── favicon.ico       // 웹사이트 아이콘
│   │   └── /assets           // 기타 정적 자산
│   ├── /src
│   │   ├── /components       // 재사용 가능한 React 컴포넌트들
│   │   │   ├── /common       // 공통 컴포넌트 (Button, Input 등)
│   │   │   ├── /layout       // 레이아웃 관련 컴포넌트 (Header, Footer 등)
│   │   │   └── /features     // 기능별 컴포넌트
│   │   ├── /pages            // 각 페이지 컴포넌트
│   │   │   ├── Home.tsx
│   │   │   ├── Dashboard.tsx
│   │   │   └── Profile.tsx
│   │   ├── /hooks            // 커스텀 React 훅들
│   │   │   ├── useAuth.ts
│   │   │   └── useFetch.ts
│   │   ├── /services         // API 호출 등 백엔드와의 통신 로직
│   │   │   ├── api.ts        // Axios 인스턴스 및 기본 설정
│   │   │   ├── userService.ts
│   │   │   └── nutritionService.ts
│   │   ├── /assets           // 스타일 시트(CSS), 폰트, 이미지 등
│   │   │   ├── /styles
│   │   │   ├── /images
│   │   │   └── /fonts
│   │   ├── /utils            // 유틸리티 함수들
│   │   │   ├── formatters.ts
│   │   │   └── validators.ts
│   │   ├── /context          // React Context API 관련 파일들
│   │   │   ├── AuthContext.tsx
│   │   │   └── ThemeContext.tsx
│   │   ├── /redux            // Redux 상태 관리 관련 파일들
│   │   │   ├── /actions
│   │   │   ├── /reducers
│   │   │   ├── /selectors
│   │   │   ├── /middlewares
│   │   │   └── store.ts
│   │   ├── /styles           // CSS-in-JS 또는 스타일 모듈 파일들
│   │   │   ├── global.css
│   │   │   └── theme.ts
│   │   ├── /i18n             // 다국어 지원 관련 파일들
│   │   │   ├── /locales
│   │   │   └── i18n.ts
│   │   ├── /config           // 환경 설정 파일
│   │   │   └── config.ts
│   │   ├── App.tsx           // 메인 앱 컴포넌트
│   │   └── index.tsx         // React 앱 진입점
│   ├── /tests                // Jest를 사용한 프론트엔드 테스트 파일들
│   │   ├── /unit
│   │   ├── /integration
│   │   └── /e2e
│   ├── /cypress              // Cypress E2E 테스트
│   │   ├── /integration
│   │   ├── /fixtures
│   │   └── /support
│   ├── package.json          // 프론트엔드 종속성 정보
│   ├── tsconfig.json         // TypeScript 설정 파일
│   ├── .eslintrc.js          // ESLint 설정 파일
│   ├── .prettierrc           // Prettier 코드 포맷 설정 파일
│   └── webpack.config.js     // Webpack 설정 파일 (필요 시)
│
├── /backend                  // Nest.js 백엔드 애플리케이션
│   ├── /src
│   │   ├── /controllers      // Nest.js 컨트롤러
│   │   │   ├── user.controller.ts
│   │   │   └── nutrition.controller.ts
│   │   ├── /services         // Nest.js 서비스
│   │   │   ├── user.service.ts
│   │   │   └── nutrition.service.ts
│   │   ├── /models           // TypeORM을 사용한 DB 모델 정의
│   │   │   ├── user.entity.ts
│   │   │   └── nutrition.entity.ts
│   │   ├── /middlewares      // Nest.js 미들웨어
│   │   │   ├── logger.middleware.ts
│   │   │   └── auth.middleware.ts
│   │   ├── /config           // 환경설정 파일
│   │   │   ├── database.config.ts
│   │   │   └── jwt.config.ts
│   │   ├── /utils            // 유틸리티 함수들
│   │   ├── /dto              // Data Transfer Objects 정의
│   │   │   ├── user.dto.ts
│   │   │   └── nutrition.dto.ts
│   │   ├── /guards           // Nest.js 가드
│   │   │   └── auth.guard.ts
│   │   ├── /pipes            // Nest.js 파이프
│   │   │   └── validation.pipe.ts
│   │   ├── /interceptors     // Nest.js 인터셉터
│   │   │   └── transform.interceptor.ts
│   │   ├── /decorators       // 커스텀 데코레이터
│   │   ├── /repositories     // 데이터 접근 레이어
│   │   │   ├── user.repository.ts
│   │   │   └── nutrition.repository.ts
│   │   ├── app.module.ts     // 메인 Nest.js 모듈
│   │   └── main.ts           // Nest.js 애플리케이션 엔트리 포인트
│   ├── /test                 // Jest를 사용한 백엔드 테스트 파일들
│   │   ├── /unit
│   │   ├── /integration
│   │   └── /e2e
│   ├── package.json          // 백엔드 종속성 정보
│   ├── nest-cli.json         // Nest CLI 설정 파일
│   ├── tsconfig.json         // TypeScript 설정 파일
│   ├── .eslintrc.js          // ESLint 설정 파일
│   └── .prettierrc           // Prettier 코드 포맷 설정 파일
│
├── /infrastructure           // 인프라 관련 파일들
│   ├── /terraform            // Terraform 코드 (AWS 리소스 설정)
│   │   ├── main.tf
│   │   ├── variables.tf
│   │   ├── outputs.tf
│   │   ├── /modules          // Terraform 모듈
│   │   │   ├── /vpc
│   │   │   ├── /ec2
│   │   │   └── /rds
│   │   └── terraform.tfvars
│   ├── /docker               // Docker 설정 파일들
│   │   ├── Dockerfile.frontend
│   │   ├── Dockerfile.backend
│   │   └── docker-compose.yml
│   ├── /kubernetes           // Kubernetes 배포 파일들
│   │   ├── /deployments
│   │   │   ├── frontend.yaml
│   │   │   └── backend.yaml
│   │   ├── /services
│   │   │   ├── frontend-service.yaml
│   │   │   └── backend-service.yaml
│   │   ├── /ingress
│   │   │   └── ingress.yaml
│   │   └── /configmaps
│   │       └── app-config.yaml
│   ├── /scripts              // 배포 자동화 스크립트
│   │   ├── deploy.sh
│   │   └── rollback.sh
│   ├── /helm                 // Helm 차트
│   │   ├── Chart.yaml
│   │   ├── values.yaml
│   │   └── /templates
│   ├── /secrets              // 비밀 정보 관리
│   │   └── .gitignore
│   ├── /monitoring           // 모니터링 설정
│   │   ├── /prometheus
│   │   │   └── prometheus.yml
│   │   └── /grafana
│   │       └── dashboards.json
│   └── /logging              // 로깅 설정
│       ├── /elasticsearch
│       ├── /logstash
│       └── /kibana
│
├── /database                 // 데이터베이스 관련 파일들
│   ├── /migrations           // TypeORM 마이그레이션 파일들
│   ├── /seeds                // 초기 데이터 삽입 스크립트
│   ├── schema.sql            // MySQL DB 스키마 정의
│   └── /backups              // 데이터베이스 백업 스크립트
│
├── /docs                     // 프로젝트 문서화
│   ├── /api                  // API 문서화 (Swagger/OpenAPI)
│   │   └── swagger.json
│   ├── /architecture         // 시스템 아키텍처 문서
│   │   ├── system-design.md
│   │   └── database-schema.md
│   ├── /requirements         // 요구사항 명세서
│   └── /development          // 개발 가이드 및 규칙
│
├── /scripts                  // 유틸리티 스크립트
│   ├── setup-dev.sh          // 개발 환경 설정 스크립트
│   └── generate-env.sh       // 환경 변수 생성 스크립트
│
├── /config                   // 전역 설정 파일
│   ├── .env.example          // 환경 변수 예제 파일
│   └── global-config.js      // 전역 설정
│
├── /.github                  // GitHub 관련 설정
│   └── /workflows            // GitHub Actions CI/CD 워크플로우
│       ├── ci.yml
│       └── cd.yml
│
├── README.md                 // 프로젝트 설명 및 가이드
├── CONTRIBUTING.md           // 기여 가이드라인
├── CHANGELOG.md              // 변경사항 기록
├── LICENSE                   // 라이선스 정보
├── .gitignore                // Git에 포함되지 않을 파일들
├── .env                      // 환경 변수 파일 (git에 포함되지 않음)
├── package.json              // 프로젝트 전체 스크립트 및 종속성 정보
└── lerna.json                // Lerna 설정 파일 (모노레포 관리용, 필요 시)